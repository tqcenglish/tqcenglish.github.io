<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>羚羊挂角</title>
  <icon>https://www.gravatar.com/avatar/912e82737b4a4cbf97e7625012e693f3</icon>
  <subtitle>无迹可寻</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://tqcenglish.github.io/"/>
  <updated>2020-03-16T13:20:21.116Z</updated>
  <id>https://tqcenglish.github.io/</id>
  
  <author>
    <name>tqcenglish</name>
    <email>xx@example.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E6%96%B0%E6%A6%82%E5%BF%B5-%E6%96%B0%E6%A6%82%E5%BF%B5-%E7%AC%AC5%E8%AF%BE/"/>
    <id>https://tqcenglish.github.io/2020/03/16/新概念-新概念-第5课/</id>
    <published>2020-03-16T13:20:21.116Z</published>
    <updated>2020-03-16T13:20:21.116Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新概念-第5课"><a href="#新概念-第5课" class="headerlink" title="新概念 第5课"></a>新概念 第5课</h1><ul><li>How are you today？ 你身体好吗？</li><li>I’am fine, thank you.</li></ul><p>How is Emama? 爱玛身体好吗？<br>Very well</p><h2 id="单词"><a href="#单词" class="headerlink" title="单词"></a>单词</h2><p>today adv,今天<br>Well/good/fine 区别</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;新概念-第5课&quot;&gt;&lt;a href=&quot;#新概念-第5课&quot; class=&quot;headerlink&quot; title=&quot;新概念 第5课&quot;&gt;&lt;/a&gt;新概念 第5课&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;How are you today？ 你身体好吗？&lt;/li&gt;
&lt;li&gt;I’am fine
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E6%96%B0%E6%A6%82%E5%BF%B5-%E6%96%B0%E6%A6%82%E5%BF%B5-%E7%AC%AC3%E8%AF%BE/"/>
    <id>https://tqcenglish.github.io/2020/03/16/新概念-新概念-第3课/</id>
    <published>2020-03-16T13:20:21.115Z</published>
    <updated>2020-03-16T13:20:21.115Z</updated>
    
    <content type="html"><![CDATA[<ol><li>too 长音， 也/还/而且</li><li>非正式问候 hello</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;too 长音， 也/还/而且&lt;/li&gt;
&lt;li&gt;非正式问候 hello&lt;/li&gt;
&lt;/ol&gt;

      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E6%96%B0%E6%A6%82%E5%BF%B5-%E6%96%B0%E6%A6%82%E5%BF%B5-%E7%AC%AC4%E8%AF%BE/"/>
    <id>https://tqcenglish.github.io/2020/03/16/新概念-新概念-第4课/</id>
    <published>2020-03-16T13:20:21.115Z</published>
    <updated>2020-03-16T13:20:21.116Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新概念-第4课"><a href="#新概念-第4课" class="headerlink" title="新概念 第4课"></a>新概念 第4课</h1><h2 id="单词"><a href="#单词" class="headerlink" title="单词"></a>单词</h2><ul><li>nationality 国籍 nation 国家 (注意发音差别)</li><li>I am / You are / He is / She is / It is</li><li>主系表变疑问句 be 动词提前</li><li>Yes, I am. / No, I am not.</li><li>What’s your name? </li><li>engineer 工程师 teacher 教师 policeman/policewoman (女)警察 nurse 护士 airhostess 空中小姐</li><li>a / an  元音</li><li>The International Nurse Day 国际护士节</li><li>taxi driver / postman / mechanic / housewife / milkman</li><li>job 赚钱的途径 /career 感兴趣的事业</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;新概念-第4课&quot;&gt;&lt;a href=&quot;#新概念-第4课&quot; class=&quot;headerlink&quot; title=&quot;新概念 第4课&quot;&gt;&lt;/a&gt;新概念 第4课&lt;/h1&gt;&lt;h2 id=&quot;单词&quot;&gt;&lt;a href=&quot;#单词&quot; class=&quot;headerlink&quot; title=&quot;单
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E5%B7%A5%E4%BD%9C-2015-03-19-coovox%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84/"/>
    <id>https://tqcenglish.github.io/2020/03/16/工作-2015-03-19-coovox目录结构/</id>
    <published>2020-03-16T13:20:21.114Z</published>
    <updated>2020-03-16T13:20:21.114Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Coovox-2016-10-4"><a href="#Coovox-2016-10-4" class="headerlink" title="Coovox 2016/10/4"></a>Coovox 2016/10/4</h1><p>系统中的相关知识可能错误。 由于系统直接使用了 ubuntu 系统，所以一些地方有差别。 文档需要<strong>更新</strong>。<br>运行在 Linux 下基于 Asterisk 的 PBX。</p><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p>Coovox 运行在 Linux 系统上，所以目录结构与 Linux 相关。</p><h3 id="语音文件位置"><a href="#语音文件位置" class="headerlink" title="语音文件位置"></a>语音文件位置</h3><ul><li>语音文件位置 <strong>/var/lib/asterisk/sounds</strong></li><li>Moh是Music On Hold 缩写。 Moh文件目录地址 <strong>/var/lib/asterisk/moh</strong>，它链接到 <strong>/var/lib/asterisk/sounds/moh</strong>。</li></ul><h3 id="录音文件"><a href="#录音文件" class="headerlink" title="录音文件"></a>录音文件</h3><p>在 <strong>extensions_general.conf</strong> 中设置录音文件存放位置，默认目录 <strong>/var/spool/asterisk/monitor/</strong> 下有三个子目录分别对应三种录音方式</p><ul><li>recording   //通话录音</li><li>meetme      //会议录音</li><li>one_touch   //一键录音， 修改了features.c文件中： one_touch/通道/文件名</li></ul><p><strong>/www/monitor</strong> 链接到文件 <strong>/var/spool/asterisk/monitor</strong></p><h3 id="prompts"><a href="#prompts" class="headerlink" title="prompts"></a>prompts</h3><p><strong>/www/prompts</strong> 包含closed.gsm, welcome.gsm两个文件，对应非工作和工作两种状态。<br>它链接到文件目录<strong>/var/lib/asterisk/prompts</strong>。</p><h3 id="Music"><a href="#Music" class="headerlink" title="Music"></a>Music</h3><p>通过 Music management 上传后音乐文件在： <strong>/var/lib/asterisk/sounds/</strong>目录下</p><h3 id="Voicemail"><a href="#Voicemail" class="headerlink" title="Voicemail"></a>Voicemail</h3><p>由 <strong>extensions_general.conf</strong> 中设置 <strong>/var/spool/asterisk/voicemail/default</strong></p><h3 id="Fax"><a href="#Fax" class="headerlink" title="Fax"></a>Fax</h3><p><strong>/var/spool/asterisk/fax</strong></p><h3 id="Call-Log"><a href="#Call-Log" class="headerlink" title="Call Log"></a>Call Log</h3><ul><li>/var/log/asterisk/cdr-csv/所有通话日志的字段信息Master.csv。</li><li>/var/log/asterisk/cdr-custom/ 用户自定的log 的Master.csv</li></ul><h3 id="脚本程序"><a href="#脚本程序" class="headerlink" title="脚本程序"></a>脚本程序</h3><ul><li><p>/etc/scripts/</p><pre><code>bulk_users_gen(二进制)logger.shrunddnsdahdi_scan.sh  logspackage.shrunddns.shdahdi_update.sh  使用dahdi_cfg使得FXS/FXO通道生效   network.shservice.shdhcpd_conf.shntpshell_scripts.shdown_users_extensions（二进制）  openvpnkey.shsnmp.shemailtofax.shpackage.shvpnclient.shfaxlog.shparse.shvpnserver.shfaxtoemail.shphonesinit.sh（，auto_phone_zycoo二进制）vpnusers.sh</code></pre></li></ul><h3 id="IP"><a href="#IP" class="headerlink" title="IP"></a>IP</h3><p>用户的IP信息存放在 <strong>/etc/asterisk/rc.conf</strong></p><h3 id="cgi"><a href="#cgi" class="headerlink" title="cgi"></a>cgi</h3><ul><li>/www/cgi-bin<br>   upload 二进制程序</li></ul><h3 id="PPTP-VPN"><a href="#PPTP-VPN" class="headerlink" title="PPTP VPN"></a>PPTP VPN</h3><ul><li>/usr/sbin/pptp-client   （二进制） //完成pptp vpn客户拨号程序</li></ul><h3 id="证书位置"><a href="#证书位置" class="headerlink" title="证书位置"></a>证书位置</h3><h4 id="TLS的证书位置"><a href="#TLS的证书位置" class="headerlink" title="TLS的证书位置"></a>TLS的证书位置</h4><ul><li><p>/etc/asterisk/keys/</p><p>   asterisk.crt<br>   asterisk.key<br>   asterisk.pem<br>   ca.crt<br>   ca.key</p></li></ul><h4 id="openvpn-证书位置"><a href="#openvpn-证书位置" class="headerlink" title="openvpn 证书位置"></a>openvpn 证书位置</h4><ul><li><p>/etc/openvpn/keys/</p><p>   ca.crt<br>   ca.key<br>   dh1024.pem<br>   server.crt<br>   server.csr<br>   server.key</p></li></ul><p>注意/etc/asterisk/openvpn_attribute.conf文件的存在。</p><h4 id="客户端证书生成位置"><a href="#客户端证书生成位置" class="headerlink" title="客户端证书生成位置"></a>客户端证书生成位置</h4><ul><li><p>/www/openvpnkeys/</p><p>   Phone1.tar<br>   client.tar</p></li></ul><h3 id="PPP"><a href="#PPP" class="headerlink" title="PPP"></a>PPP</h3><p>支持ppp的用户信息和ppp配置选项存放位置</p><ul><li>/etc/ppp/</li></ul><p>主要文件如下</p><pre><code>chap-secrets   （用户）options.pptpd   （pptpd）options.xl2tpd    （xl2tpd）pap-secrets    （用户）</code></pre><h3 id="http-目录"><a href="#http-目录" class="headerlink" title="http 目录"></a>http 目录</h3><ul><li>/www</li></ul><h3 id="tftpd-存放目录"><a href="#tftpd-存放目录" class="headerlink" title="tftpd 存放目录"></a>tftpd 存放目录</h3><ul><li>/srv/tftpboot</li></ul><h3 id="inetd-文件"><a href="#inetd-文件" class="headerlink" title="inetd 文件"></a>inetd 文件</h3><ul><li>/etc/inetd     </li></ul><h3 id="Log"><a href="#Log" class="headerlink" title="Log"></a>Log</h3><p>日志目录(web登录、ssh登录等), Ssh登录日志通过last得来的。</p><ul><li>/var/log/messages //系统日志</li><li>存放于/www/log  和/www/syslogs</li></ul><h3 id="下载的链接创建"><a href="#下载的链接创建" class="headerlink" title="下载的链接创建"></a>下载的链接创建</h3><pre><code>ln -sf /var/lib/asterisk/prompts  /www/prompts                ;链接IVR提示音ln -sf /etc/asterisk/keys  /www/keys                              ;链接SIP协议TLS注册证书。ln -sf /var/spool/asterisk/monitor  /www/monitor                  ;链接通话录音文件ln -sf /var/log/asterisk/cdr-custom  /www/cdr-csv              ;链接通话日志文件ln -sf /var/spool/asterisk/voicemail/default  /www/voicemail</code></pre><h2 id="程序包"><a href="#程序包" class="headerlink" title="程序包"></a>程序包</h2><pre><code>程序名    版本        说明Asterisk    1.8.7.1        Busybox    1.17.4        采用了httpd、inetd、tftpd、IPtables    1.4.10        Dropbear    v0.49        Openssl    1.0.0d        Libpri    1.4.12        Openvpn    2.2.0        Easy-rsa程序包Pppd    2.4.4        Pptpd    1.3.4        Rp-pppoe    3.10        Spandsp    0.0.5        Speex    1.2rc1        Srtp    1.4.2        Ssmtp    2.62        Ntp    4.2.6p3        Tiff    3.9.4        Mailx    12.4        Wget    1.12        Xl2tp    1.2.7        Netsnmp    5.6.1        Ddns (updatedd)    2.6_        DDNS,源用了plannetinadyn            DDNSUpload    2.6        Web界面上传文件二进制程序</code></pre><h3 id="etc-asterisk"><a href="#etc-asterisk" class="headerlink" title="/etc/asterisk"></a>/etc/asterisk</h3><p>说明：调整目录结构，主要将变化的数据都存放于/etc/asterisk目录下。<br>该目录有两种情况：第一种情况是/etc/asterisk与系统分区用一个分区；第二种情况/etc/asterisk/单独存放与一个分区中。其主要目的为双机热备和磁盘恢复准备。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Coovox-2016-10-4&quot;&gt;&lt;a href=&quot;#Coovox-2016-10-4&quot; class=&quot;headerlink&quot; title=&quot;Coovox 2016/10/4&quot;&gt;&lt;/a&gt;Coovox 2016/10/4&lt;/h1&gt;&lt;p&gt;系统中的相关知识可能错误。 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E6%96%B0%E6%A6%82%E5%BF%B5-%E6%96%B0%E6%A6%82%E5%BF%B5-6-%E8%AF%BE/"/>
    <id>https://tqcenglish.github.io/2020/03/16/新概念-新概念-6-课/</id>
    <published>2020-03-16T13:20:21.114Z</published>
    <updated>2020-03-16T13:20:21.115Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新概念-6-课"><a href="#新概念-6-课" class="headerlink" title="新概念 6 课"></a>新概念 6 课</h1><h2 id="单词"><a href="#单词" class="headerlink" title="单词"></a>单词</h2><p>blouse/shirt 女/男衬衫<br>Family tree 族谱</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;新概念-6-课&quot;&gt;&lt;a href=&quot;#新概念-6-课&quot; class=&quot;headerlink&quot; title=&quot;新概念 6 课&quot;&gt;&lt;/a&gt;新概念 6 课&lt;/h1&gt;&lt;h2 id=&quot;单词&quot;&gt;&lt;a href=&quot;#单词&quot; class=&quot;headerlink&quot; title=&quot;单
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E5%B7%A5%E4%BD%9C-QueueStatus/"/>
    <id>https://tqcenglish.github.io/2020/03/16/工作-QueueStatus/</id>
    <published>2020-03-16T13:20:21.112Z</published>
    <updated>2020-03-16T13:20:21.112Z</updated>
    
    <content type="html"><![CDATA[<h1 id="QueueMemberStatus"><a href="#QueueMemberStatus" class="headerlink" title="QueueMemberStatus"></a>QueueMemberStatus</h1><p>主动事件，当队列中成员发生变化时(例如接听电话)产生</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manager show event QueueMemberStatus</span><br></pre></td></tr></table></figure><pre><code>Event: QueueMemberStatus[Synopsis]Raised when a Queue member&apos;s status has changed.[Syntax]Event: QueueMemberStatusQueue: &lt;value&gt;MemberName: &lt;value&gt;Interface: &lt;value&gt;StateInterface: &lt;value&gt;Membership: &lt;value&gt;Penalty: &lt;value&gt;CallsTaken: &lt;value&gt;LastCall: &lt;value&gt;Status: &lt;value&gt;Paused: &lt;value&gt;Ringinuse: &lt;value&gt;[Arguments]Queue    The name of the queue.MemberName    The name of the queue member.Interface    The queue member&apos;s channel technology or location.StateInterface    Channel technology or location from which to read device state    changes.Membership    dynamic    realtime    staticPenalty    The penalty associated with the queue member.CallsTaken    The number of calls this queue member has serviced.LastCall    The time this member last took a call, expressed in seconds since    00:00, Jan 1, 1970 UTC.Status    The numeric device state status of the queue member.    0 - AST_DEVICE_UNKNOWN    1 - AST_DEVICE_NOT_INUSE    2 - AST_DEVICE_INUSE    3 - AST_DEVICE_BUSY    4 - AST_DEVICE_INVALID    5 - AST_DEVICE_UNAVAILABLE    6 - AST_DEVICE_RINGING    7 - AST_DEVICE_RINGINUSE    8 - AST_DEVICE_ONHOLDPaused    0    1Ringinuse    0    1</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;QueueMemberStatus&quot;&gt;&lt;a href=&quot;#QueueMemberStatus&quot; class=&quot;headerlink&quot; title=&quot;QueueMemberStatus&quot;&gt;&lt;/a&gt;QueueMemberStatus&lt;/h1&gt;&lt;p&gt;主动事件，当队列中成
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E5%B7%A5%E4%BD%9C-Asterisk/"/>
    <id>https://tqcenglish.github.io/2020/03/16/工作-Asterisk/</id>
    <published>2020-03-16T13:20:21.109Z</published>
    <updated>2020-03-16T13:20:21.109Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Asterisk-基础"><a href="#Asterisk-基础" class="headerlink" title="Asterisk 基础"></a>Asterisk 基础</h1><p>相关概念和配置</p><h3 id="关于接口"><a href="#关于接口" class="headerlink" title="关于接口"></a>关于接口</h3><p>Asterisk可以连接的接口类型:</p><ul><li>模拟接口(电话线,模拟电话)  <a href="#digital_analog_diff">常见模拟器接口和数字接口</a></li><li>数字线路(T1,E1)<a href="http://www.h3c.com.cn/Products___Technology/Technology/VoIP/Other_technology/Technology_recommend/200805/605894_30003_0.htm" target="_blank" rel="noopener">T1,E1介绍</a></li><li>Voip协议(SIP,IAX2)<a href="#word">名词解释</a></li></ul><h2 id="文件配置及对应功能设置"><a href="#文件配置及对应功能设置" class="headerlink" title="文件配置及对应功能设置"></a>文件配置及对应功能设置</h2><ul><li>extensions.conf 拨号方案文件</li><li>sip.conf Sip协议文件</li><li>iax.conf IAX通道文件</li></ul><h2 id="sip-conf"><a href="#sip-conf" class="headerlink" title="#sip.conf"></a>#sip.conf</h2><pre><code>srvlookup= yet | 建立一个逻辑和可解析地址的方法record_out=Always | adhoc | Never ;去电录音Adhoc须要时,Never从不,Always总是record_in=Never ;来电录音callgroup ;呼叫组type：sip的类型。格式：type =user|peer|friendpickupgroup  ;代接组disallow     ;不允许编码allow        ;允许编码port         ;端口号qualify      ;监视Asterisk服务器与电话之间是否延时host=dynamic ;要求号码要注册,以便Asterisk如何找到电话.(static则不需要注册)</code></pre><h2 id="Asterisk-命令"><a href="#Asterisk-命令" class="headerlink" title="Asterisk 命令"></a>Asterisk 命令</h2><ul><li><p>sip</p><ul><li>sip set debug on  设置显示更多的sip信息</li><li>sip set debug off 关闭显示更多的sip信息</li><li>sip show channels 显示所有活动的SIP通道</li><li>sip show peers 显示所有已定义的SIP peer</li></ul></li><li><p>core</p><ul><li>core show applications 显示所有的应用，比如Dial, Radius, Hangup, Answer等</li><li>core show channels 显示所有的通话频道</li><li>core show codecs 显示所有支持的编解码器</li><li>core show functions 显示所有的功能函数</li><li>core stop gracefully 优雅地停止asterisk/</li><li>core stop now 立即停止运行asterisk</li></ul></li><li><p>module</p><ul><li>module show 显示所有已加载模块</li><li>module load cdr_radius.so     加载模块cdr_radius.so</li><li>module reload cdr_radius.so 重新加载模块cdr_radius.so</li><li>module unload cdr_radius.so 卸载模块cdr_radius.so</li></ul></li></ul><h3 id="application"><a href="#application" class="headerlink" title="application"></a>application</h3><ul><li>Echo()校验工作通道双向通讯</li></ul><h3 id="dialplan"><a href="#dialplan" class="headerlink" title="dialplan"></a>dialplan</h3><p>一般的原则是，拨号方案中的函数可以设置或者获取通道的原数据，但不能做信令或者媒体处理的事情</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>Asterisk Quick Start Guide</li></ul><h2 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h2><p>概念解释</p><h3 id="常见模拟器接口和数字接口"><a href="#常见模拟器接口和数字接口" class="headerlink" title="常见模拟器接口和数字接口"></a>常见模拟器接口和数字接口</h3><ul><li><p>模拟接口</p><ul><li>射频</li><li>复合视频</li><li>端子</li></ul></li><li><p>数字接口</p><ul><li>VGA</li><li>DVI</li><li>HDMI</li><li>IEE1394</li><li>光纤</li></ul></li></ul><h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><ul><li>PSTN: Public Switched Telephone Network 公用交换电话网 <a href="http://zh.wikipedia.org/wiki/PSTN" target="_blank" rel="noopener">wiki</a></li><li>SIP: Session Initiation Protocol 会话发起协议 通常用于VOIP电话,进行呼叫建立,呼叫协商,呼叫结束.它帮助两个端互相通认,但它不处理媒体;当呼叫建立后,他通过实时传输协议(RTP)在电话A到电话B直接传输媒体.SIP是一个应用层的信令协议.他使用的端口是5060(通常)进行通信.SIP可以通过UDP和TCP传输层协议进行传输.RTP用于端点间传输媒体(语音),Asterisk中RTP使用大数字的无特权端口(默认10,000到20,000)<br>SIP优点:普通的被接受和结构灵活.其它的VOIP协议还有H.323,IAX,MGCP. <a href="http://zh.wikipedia.org/wiki/%E4%BC%9A%E8%AF%9D%E5%8F%91%E8%B5%B7%E5%8D%8F%E8%AE%AE" target="_blank" rel="noopener">wiki</a></li><li>IAX: Inter Aasterisk eXchange 协议通常用于服务器间通信,IAX和SIP协议最大区别在于媒体(语音)在端点之间传输的方式不同.Asterisk默认情况是在5060端口接收SIP信令,在10000-20000端口接收RTP(媒体)流.而IAX所有的信令和媒体流都通过一个端口4569进行传输.这种方式的好处是IAX协议能更适合在NAT相关拓扑的应用.IAX用户习惯对进入PBX系统的呼叫进行鉴权和处理.对从PBX系统呼出的呼叫,Asterisk应用IAX的iax.conf文件的端点进入(条目)对远端进行鉴权)</li><li>FXO, FXS 区别: FXO不生成拨号音,而是接收.FXS端口提供拨号音和震铃电压,在有呼叫的时候提醒用户.两者接口都提供双向通讯(同时双方向的通讯传输).如果Asterisk有个兼容FXO端口,就可以把电话线接入这端口,可以使用这根电话线呼叫和接收电话呼叫.同理,如果有个FXS端口,可以连接一部模拟电话,Asterisk就可以呼叫这部电话,可能也可以呼叫.(端口:通过配置使用的信令进行定义). FXS卡必须像中心局(CO)进行运转,使用FXO信令.同理,FXO卡连接CO,就意味着它需要像终端进行运转,使用FXS信令.</li></ul><h1 id="AsteriskWiki书签表"><a href="#AsteriskWiki书签表" class="headerlink" title="AsteriskWiki书签表"></a>AsteriskWiki书签表</h1><p>下面会列出Asterisk相关的知识点链接。</p><ul><li><a href="https://wiki.asterisk.org/wiki/display/AST/Getting+a+Backtrace" target="_blank" rel="noopener">Getting+a+Backtrace</a> 收集Asterisk错误堆栈信息, 才对官方提交bug时需要详细的堆栈信息。</li><li><a href="https://wiki.asterisk.org/wiki/display/AST/Secure+Calling+Tutorial" target="_blank" rel="noopener">Secure+Calling+Tutorial</a> 创建证书</li><li><a href="https://wiki.asterisk.org/wiki/display/AST/WebRTC+tutorial+using+SIPML5" target="_blank" rel="noopener">WebRTC+tutorial+using+SIPML5</a> 利用SIPML%建立WebRTC通话</li><li><a href="https://wiki.asterisk.org/wiki/display/AST/Asterisk+WebRTC+Support" target="_blank" rel="noopener">Asterisk+WebRTC+Support</a>Asterisk对WebRTC的支持情况和基本配置。</li><li><p><a href="https://wiki.asterisk.org/wiki/display/AST/Interactive+Connectivity+Establishment+%28ICE%29+in+Asterisk" target="_blank" rel="noopener">Interactive Connectivity Establishment (ICE) in Asterisk</a> Asterisk 关于ICE的设置。</p></li><li><p><a href="https://wiki.asterisk.org/wiki/display/AST/Coding+Guidelines" target="_blank" rel="noopener">Coding+Guidelines</a>Asterisk源码编码规范</p></li><li><a href="https://wiki.asterisk.org/wiki/display/AST/Setting+up+PJSIP+Realtime" target="_blank" rel="noopener">This tutorial describes the configuration of Asterisk’s PJSIP channel driver with the “realtime” database storage backend</a> Asterisk 设置PJSIP</li><li><a href="https://wiki.asterisk.org/wiki/display/AST/Asterisk+PJSIP+Troubleshooting+Guide" target="_blank" rel="noopener">Asterisk+PJSIP+Troubleshooting+Guide</a></li><li><p><a href="https://wiki.asterisk.org/wiki/display/AST/Migrating+from+chan_sip+to+res_pjsip" target="_blank" rel="noopener">Migrating from chan_sip to res_pjsip Skip to end of metadata</a></p></li><li><p><a href="https://wiki.asterisk.org/wiki/display/AST/PJSIP+Transport+Selection" target="_blank" rel="noopener">PJSIP+Transport+Selection</a></p></li><li><p><a href="https://wiki.asterisk.org/wiki/display/AST/Configuring+res_pjsip" target="_blank" rel="noopener">Configuring+res_pjsip</a></p></li></ul><h2 id="Asterisk相关协议"><a href="#Asterisk相关协议" class="headerlink" title="Asterisk相关协议"></a>Asterisk相关协议</h2><ul><li><a href="http://www.h3c.com.cn/Products___Technology/Technology/VoIP/Other_technology/Technology_recommend/200805/605897_30003_0.htm" target="_blank" rel="noopener">SIP技术介绍</a></li><li><a href="http://www.h3c.com.cn/Products___Technology/Technology/VoIP/Other_technology/Technology_recommend/200805/605897_30003_0.htm" target="_blank" rel="noopener">H.323技术介绍</a></li><li><a href="http://www.h3c.com.cn/MiniSite/Technology_Circle/Net_Reptile/The_Five/Home/Catalog/201206/747038_97665_0.htm" target="_blank" rel="noopener">STUN和TURN技术浅析</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Asterisk-基础&quot;&gt;&lt;a href=&quot;#Asterisk-基础&quot; class=&quot;headerlink&quot; title=&quot;Asterisk 基础&quot;&gt;&lt;/a&gt;Asterisk 基础&lt;/h1&gt;&lt;p&gt;相关概念和配置&lt;/p&gt;
&lt;h3 id=&quot;关于接口&quot;&gt;&lt;a href=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E5%B7%A5%E4%BD%9C-%E7%BC%96%E7%A8%8B/"/>
    <id>https://tqcenglish.github.io/2020/03/16/工作-编程/</id>
    <published>2020-03-16T13:20:21.109Z</published>
    <updated>2020-03-16T13:20:21.110Z</updated>
    
    <content type="html"><![CDATA[<h1 id="C-概念"><a href="#C-概念" class="headerlink" title="C++概念"></a>C++概念</h1><h2 id="虚函数与纯虚函数区别"><a href="#虚函数与纯虚函数区别" class="headerlink" title="虚函数与纯虚函数区别"></a>虚函数与纯虚函数区别</h2><ol><li>带纯虚函数的类称为虚基类，这种基类不能直接生成对象，而只有被继承并重写其虚函数后才能使用，这样的类叫抽象类。</li><li>虚函数本身有默认实现，它的作用是为了能让其在它的子类里可以被重载，以达到多态，而纯虚函数只是一个接口，仅仅是个函数声明，它必须在子类里实现。</li><li>虚函数在子类里也可以不重载，纯虚函数必须在子类里实现。有纯虚函数的类 不能被实例化。</li></ol><h1 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h1><p><a href="http://www.w3school.com.cn/css/index.asp" target="_blank" rel="noopener">w3school CSS</a><br><a href="http://www.w3school.com.cn/css3/index.asp" target="_blank" rel="noopener">w3school CSS3</a></p><h1 id="一些有趣的项目"><a href="#一些有趣的项目" class="headerlink" title="一些有趣的项目"></a>一些有趣的项目</h1><p>记录一些有参考价值的项目.</p><h2 id="javascript"><a href="#javascript" class="headerlink" title="javascript"></a>javascript</h2><ul><li><a href="http://cozy.io/en/" target="_blank" rel="noopener">cozy</a> 个人云服务搭建，对联系人，日历，云存储进行管理。</li><li><a href="https://github.com/winstonjs/winston" target="_blank" rel="noopener">winston</a> Node.js的一个异步日志库。可在sails中配置使用.</li><li><a href="https://github.com/ocombe/ocLazyLoad" target="_blank" rel="noopener">ocLazyLoad</a> 对AngularJS中模块或组件进行懒加载。</li><li><a href="https://github.com/marcorinck/angular-growl" target="_blank" rel="noopener">angular-growl</a> 对AngularJS添加notification功能。阿里云使用</li><li><a href="https://github.com/posabsolute/jQuery-Validation-Engine" target="_blank" rel="noopener">jQuery-Validation-Engine</a> jQuery用于验证表单输入。</li><li><a href="https://github.com/h5bp/html5-boilerplate" target="_blank" rel="noopener">html5-boilerplate</a> A professional front-end template for building fast, robust, and adaptable web apps or sites.</li><li><a href="https://github.com/videojs/video.js" target="_blank" rel="noopener">video.js</a> Video.js - open source HTML5 &amp; Flash video player</li><li><a href="https://github.com/johnpapa/angular-styleguide" target="_blank" rel="noopener">angular-styleguide</a> <a href="https://github.com/johnpapa/angular-styleguide/blob/master/i18n/zh-CN.md" target="_blank" rel="noopener">中文</a></li><li><a href="https://github.com/babel/babel" target="_blank" rel="noopener">babel</a>javascript的下一代编译器</li><li><a href="node-jscs">node-jscs</a>javascript代码风格检查</li><li><a href="https://github.com/foreverjs/forever" target="_blank" rel="noopener">forever</a>A simple CLI tool for ensuring that a given script runs continuously (i.e. forever)</li><li><a href="https://github.com/Automattic/mongoose" target="_blank" rel="noopener">mongoose</a>Mongoose is a MongoDB object modeling tool designed to work in an asynchronous environment</li><li><a href="https://github.com/visionmedia/supertest" target="_blank" rel="noopener">supertest</a>Super-agent driven library for testing node.js HTTP servers using a fluent API,模拟HTTP测试</li><li><a href="https://github.com/karma-runner/karma" target="_blank" rel="noopener">karma</a>Spectacular Test Runner for JavaScript</li><li><a href="https://github.com/GoogleChrome/chrome-app-samples" target="_blank" rel="noopener">chrome-app-samples</a> ChromeAPP例子</li></ul><h2 id="android"><a href="#android" class="headerlink" title="android"></a>android</h2><ul><li>[butterknife](<a href="https://github.com/JakeWharton/butterknife" target="_blank" rel="noopener">https://github.com/JakeWharton/butterknife</a> 对界面上元素进行注入绑定</li><li><a href="https://github.com/mmin18/LayoutCast" target="_blank" rel="noopener">LayoutCast</a>通过ADB在Android Studio 动态修改开发APP中的资源属性。</li><li><a href="https://github.com/Ereza/CustomActivityOnCrash" target="_blank" rel="noopener">CustomActivityOnCrash</a>Android library that allows launching a custom activity when your app crashes, instead of showing the hated “Unfortunately, X has stopped” dialog.</li><li><a href="https://github.com/facebook/fresco" target="_blank" rel="noopener">fresco</a>An Android library for managing images and the memory they use</li><li><a href="https://github.com/nvanbenschoten/motion" target="_blank" rel="noopener">motion</a>根据观察角度，显示不同图片</li></ul><h2 id="C-C"><a href="#C-C" class="headerlink" title="C/C++"></a>C/C++</h2><ul><li><a href="https://github.com/mist64/xhyve" target="_blank" rel="noopener">xhyve</a>xhyve, a lightweight OS X virtualization solution</li><li><a href="https://github.com/open-source-parsers/jsoncpp" target="_blank" rel="noopener">jsoncpp</a> A C++ library for interacting with JSON.</li><li><a href="https://github.com/alibaba/dexposed" target="_blank" rel="noopener">dexposed</a>dexposed enable ‘god’ mode for single android application.</li></ul><h2 id="Shell"><a href="#Shell" class="headerlink" title="Shell"></a>Shell</h2><ul><li><a href="https://github.com/tj/git-extras" target="_blank" rel="noopener">git-extras</a>GIT utilities – repo summary, repl, changelog population, author commit percentages and more</li></ul><h2 id="Book"><a href="#Book" class="headerlink" title="Book"></a>Book</h2><ul><li><a href="https://github.com/Pana/node-books" target="_blank" rel="noopener">node-books</a></li></ul><h2 id="Company"><a href="#Company" class="headerlink" title="Company"></a>Company</h2><ul><li><a href="https://github.com/alibaba" target="_blank" rel="noopener">Alibaba</a></li></ul><p>#<a href="http://lesscss.org/" target="_blank" rel="noopener">Less</a><br><a href="https://github.com/less/less.js" target="_blank" rel="noopener">github</a></p><h1 id="Sass"><a href="#Sass" class="headerlink" title="Sass"></a>Sass</h1><p>一种CSS的扩展，像编程一样写CSS.<br><a href="http://sass-lang.com/guide" target="_blank" rel="noopener">入门教程</a><br><a href="https://github.com/sass/sass" target="_blank" rel="noopener">github</a></p><ul><li><p><a href="https://github.com/rakeshpai/pi-gpio" target="_blank" rel="noopener">pi-gpio</a>A simple node.js-based GPIO helper for the Raspberry Pi</p></li><li><p><a href="https://github.com/facebook/infer" target="_blank" rel="noopener">infer</a>A static analyzer for Java, C and Objective-C</p></li></ul><h2 id="权威指南"><a href="#权威指南" class="headerlink" title="权威指南"></a>权威指南</h2><h3 id="设备区分"><a href="#设备区分" class="headerlink" title="设备区分"></a>设备区分</h3><p>三种用户设备:硬电话、软电话和模拟电话适配器（ATA）</p><ul><li>硬电话是一种设备。它看起来像办公室电话:它有听筒,号码按键等。它直接连接到网络，也称为VoIP电话。</li><li><p>软电话是一种运行在台式机或笔记本上的软件。语音要经过计算机的声音系统。最近也有了运行智能手机上的软电话。软电话的界面一般看起来像是普通电话，但不是必须的。</p></li><li><p>模拟电话适配器（ATA）使得传统的模拟电话（或者其他模拟设备，像传真机、无绳电话和寻呼机等）可以接入SIP网络，一般是一个三明治大小的盒子，有一个RJ-11口（一般称为FXS口）用来接电话机，一个RJ-45口用来接网络，和一个电源口。有的ATA支持不止一个电话。</p></li></ul><h3 id="相关项目"><a href="#相关项目" class="headerlink" title="相关项目"></a>相关项目</h3><p>  <a href="http://www.asterisk.org/asterisknow" target="_blank" rel="noopener">AsteriskNOW</a><br>  <a href="http://www.trixbox.org" target="_blank" rel="noopener">Trixbox</a><br>  <a href="http://www.elastix.org" target="_blank" rel="noopener">Elastix</a><br>  <a href="http://www.pbxinaflash.net" target="_blank" rel="noopener">PBX in a Flash</a></p><h3 id="Asterisk由来"><a href="#Asterisk由来" class="headerlink" title="Asterisk由来"></a>Asterisk由来</h3><p>Dixon的远见卓识使他相信，会有很多其他人看到这个机会，他只需要等待，等某某人实现他所期待的关键进步，然后再动手干。但是几年过去了，他发现不仅没有人创造出他所要的接口卡，也没有迹象表明有人打算这么干。再明显不过了，如果他想要一场革命的话，他得亲手发动它。于是Zapata电话项目诞生了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;C-概念&quot;&gt;&lt;a href=&quot;#C-概念&quot; class=&quot;headerlink&quot; title=&quot;C++概念&quot;&gt;&lt;/a&gt;C++概念&lt;/h1&gt;&lt;h2 id=&quot;虚函数与纯虚函数区别&quot;&gt;&lt;a href=&quot;#虚函数与纯虚函数区别&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E5%B7%A5%E4%BD%9C-DialBegin/"/>
    <id>https://tqcenglish.github.io/2020/03/16/工作-DialBegin/</id>
    <published>2020-03-16T13:20:21.108Z</published>
    <updated>2020-03-16T13:20:21.108Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DialBegin"><a href="#DialBegin" class="headerlink" title="DialBegin"></a>DialBegin</h1><p>分机主动发起呼叫时产生。<br>主动事件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manager show event DialBegin</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Event: DialBegin</span><br><span class="line">[Synopsis]</span><br><span class="line">Raised when a dial action has started.</span><br><span class="line"></span><br><span class="line">[Syntax]</span><br><span class="line">Event: DialBegin</span><br><span class="line">DialString: &lt;value&gt;</span><br><span class="line"></span><br><span class="line">[Arguments]</span><br><span class="line">DialString</span><br><span class="line">    The non-technology specific device being dialed.</span><br><span class="line"></span><br><span class="line">[See Also]</span><br><span class="line">Dial()</span><br></pre></td></tr></table></figure><p>通道详细参数 telnet 查看。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;DialBegin&quot;&gt;&lt;a href=&quot;#DialBegin&quot; class=&quot;headerlink&quot; title=&quot;DialBegin&quot;&gt;&lt;/a&gt;DialBegin&lt;/h1&gt;&lt;p&gt;分机主动发起呼叫时产生。&lt;br&gt;主动事件&lt;/p&gt;
&lt;figure class=&quot;hi
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E5%B7%A5%E4%BD%9C-Lodash-%E5%BA%93/"/>
    <id>https://tqcenglish.github.io/2020/03/16/工作-Lodash-库/</id>
    <published>2020-03-16T13:20:21.107Z</published>
    <updated>2020-03-16T13:20:21.108Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://lodash.com/docs/4.17.15" target="_blank" rel="noopener">Lodash</a> 库<br>lodash 是一个工具函数库，如数组合并，分割等操作。</p><h2 id="数组方法"><a href="#数组方法" class="headerlink" title="数组方法"></a>数组方法</h2><ul><li>_.chunk(array, [size=1]) 将数组按指定长度分段</li><li>_.compact(array) 移除数组中的 false, null, 0, “”, undefined, NaN</li><li>_.concat(array, [values]) 将指定数组与值合并新数组</li><li>_.difference(array, [values]) 对数组取交集</li><li>_.drop(array, [n=1]) 移除数组开始指定个数元素</li><li>_.dropRight(array, [n=1]) 移除数组尾部指定个数元素</li><li>_.fill(array, value, [start=0], [end=array.length]) 填充数组新值</li><li>_.findIndex 查询符合条件的元素的下标</li><li>_.flatten(array) 拍平一层数组</li><li>_.flattenDeep(array) 拍平数组</li><li>_.fromPairs 将数组转对象</li><li>_.head 获取数组第一个元素</li><li>_.indexOf 查询元素下标</li><li>_.intersection([arrays]) 交集</li><li>_.join(array, [separator=‘,’) 连接数组为字符串</li><li>_.last(array) 获取最红一个元素</li><li>_.pull(array, [values]) 移除数组中指定元素</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://lodash.com/docs/4.17.15&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lodash&lt;/a&gt; 库&lt;br&gt;lodash 是一个工具函数库，如数组合并，分割等操作。&lt;/p&gt;
&lt;h2 id=&quot;数组方法&quot;&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E5%B7%A5%E4%BD%9C-ExtensionStatus/"/>
    <id>https://tqcenglish.github.io/2020/03/16/工作-ExtensionStatus/</id>
    <published>2020-03-16T13:20:21.104Z</published>
    <updated>2020-03-16T13:20:21.104Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ExtensionStatus"><a href="#ExtensionStatus" class="headerlink" title="ExtensionStatus"></a>ExtensionStatus</h1><p>AMI 分机状态事件，在分机进行响铃，注册等操作时会通过 AMI 抛出对应的事件. 通过命令<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manager show event ExtensionStatus</span><br></pre></td></tr></table></figure></p><p>可以查看详细解释</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">Event: ExtensionStatus</span><br><span class="line">[Synopsis]</span><br><span class="line">Raised when a hint changes due to a device state change.</span><br><span class="line"></span><br><span class="line">[Syntax]</span><br><span class="line">Event: ExtensionStatus</span><br><span class="line">Exten: &lt;value&gt;</span><br><span class="line">Context: &lt;value&gt;</span><br><span class="line">Hint: &lt;value&gt;</span><br><span class="line">Status: &lt;value&gt;</span><br><span class="line">StatusText: &lt;value&gt;</span><br><span class="line"></span><br><span class="line">[Arguments]</span><br><span class="line">Exten</span><br><span class="line">    Name of the extension.</span><br><span class="line">Context</span><br><span class="line">    Context that owns the extension.</span><br><span class="line">Hint</span><br><span class="line">    Hint set for the extension</span><br><span class="line">Status</span><br><span class="line">    Numerical value of the extension status. Extension status is</span><br><span class="line">    determined by the combined device state of all items contained in the</span><br><span class="line">    hint.</span><br><span class="line">    -2 - The extension was removed from the dialplan.</span><br><span class="line">    -1 - The extension&apos;s hint was removed from the dialplan.</span><br><span class="line">    0 - &apos;Idle&apos; - Related device(s) are in an idle state.</span><br><span class="line">    1 - &apos;InUse&apos; - Related device(s) are in active calls but may take</span><br><span class="line">    more calls.</span><br><span class="line">    2 - &apos;Busy&apos; - Related device(s) are in active calls and may not take</span><br><span class="line">    any more calls.</span><br><span class="line">    4 - &apos;Unavailable&apos; - Related device(s) are not reachable.</span><br><span class="line">    8 - &apos;Ringing&apos; - Related device(s) are currently ringing.</span><br><span class="line">    9 - &apos;InUse&amp;Ringing&apos; - Related device(s) are currently ringing and</span><br><span class="line">    in active calls.</span><br><span class="line">    16 - &apos;Hold&apos; - Related device(s) are currently on hold.</span><br><span class="line">    17 - &apos;InUse&amp;Hold&apos; - Related device(s) are currently on hold and in</span><br><span class="line">    active calls.</span><br><span class="line">StatusText</span><br><span class="line">    Text representation of &apos;Status&apos;.</span><br><span class="line">    Idle</span><br><span class="line">    InUse</span><br><span class="line">    Busy</span><br><span class="line">    Unavailable</span><br><span class="line">    Ringing</span><br><span class="line">    InUse&amp;Ringing</span><br><span class="line">    Hold</span><br><span class="line">    InUse&amp;Hold</span><br><span class="line">    Unknown - Status does not match any of the above values.</span><br></pre></td></tr></table></figure><p><strong>分机需要配置 hint</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ExtensionStatus&quot;&gt;&lt;a href=&quot;#ExtensionStatus&quot; class=&quot;headerlink&quot; title=&quot;ExtensionStatus&quot;&gt;&lt;/a&gt;ExtensionStatus&lt;/h1&gt;&lt;p&gt;AMI 分机状态事件，在分机进行响铃
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E5%B7%A5%E4%BD%9C-Newchannel/"/>
    <id>https://tqcenglish.github.io/2020/03/16/工作-Newchannel/</id>
    <published>2020-03-16T13:20:21.104Z</published>
    <updated>2020-03-16T13:20:21.105Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Newchannel"><a href="#Newchannel" class="headerlink" title="Newchannel"></a>Newchannel</h1><p>当建立新的通话时会产生一条通道。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">manager show event Newchannel</span><br></pre></td></tr></table></figure></p><p>详细说明</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Event: Newchannel</span><br><span class="line">[Synopsis]</span><br><span class="line">Raised when a new channel is created.</span><br><span class="line"></span><br><span class="line">[Syntax]</span><br><span class="line">Event: Newchannel</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Newchannel&quot;&gt;&lt;a href=&quot;#Newchannel&quot; class=&quot;headerlink&quot; title=&quot;Newchannel&quot;&gt;&lt;/a&gt;Newchannel&lt;/h1&gt;&lt;p&gt;当建立新的通话时会产生一条通道。&lt;br&gt;&lt;figure class=&quot;hig
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E5%B7%A5%E4%BD%9C-x30-mqtt-api/"/>
    <id>https://tqcenglish.github.io/2020/03/16/工作-x30-mqtt-api/</id>
    <published>2020-03-16T13:20:21.102Z</published>
    <updated>2020-03-16T13:20:21.102Z</updated>
    
    <content type="html"><![CDATA[<h2 id="X30接口概述"><a href="#X30接口概述" class="headerlink" title="X30接口概述"></a>X30接口概述</h2><p>订阅主题：</p><pre><code>operation   ------ 基本操作（包含操作：播放 停止）response    ------ 对operation指令的相应update      ------ 更新配置 (包含操作：更新分机号 更新配置文件)event       ------ 事件上传 (比如x30的初始状态）</code></pre><h3 id="operation"><a href="#operation" class="headerlink" title="operation"></a>operation</h3><h4 id="播放音乐"><a href="#播放音乐" class="headerlink" title="播放音乐"></a>播放音乐</h4><p>参数：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "id": "892348jk234234",  -------字符串：任务id，也是和响应使用的id</span><br><span class="line">  "action": "play",  -------字符串：动作名称：播放</span><br><span class="line">  "data": &#123;</span><br><span class="line">    "volume": 50,  -------整型 范围：1-100  音量大小</span><br><span class="line">    "url": "http://xxxx" -------- 字符串：音源网络地址</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="停止播放音乐"><a href="#停止播放音乐" class="headerlink" title="停止播放音乐"></a>停止播放音乐</h4><p>参数：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "id": "892348jk234235",  -------字符串：任务id，也是和响应使用的id</span><br><span class="line">  "action": "stop",  -------字符串：动作名称：停止播放</span><br><span class="line">  "data": &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="response"><a href="#response" class="headerlink" title="response"></a>response</h3><h4 id="播放音乐响应"><a href="#播放音乐响应" class="headerlink" title="播放音乐响应"></a>播放音乐响应</h4><p>异步响应：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "id": "892348jk234234",  -------字符串：任务id，也是和响应使用的id</span><br><span class="line">    "action": "play",  -------字符串：动作名称：播放</span><br><span class="line">    "status": "playing" ------字符串：状态：playing(已完成) idle(空闲) error(错误)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="停止播放音乐响应"><a href="#停止播放音乐响应" class="headerlink" title="停止播放音乐响应"></a>停止播放音乐响应</h4><p>异步响应：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "id": "892348jk234235",  -------字符串：任务id，也是和响应使用的id</span><br><span class="line">    "action": "stop",  -------字符串：动作名称：停止播放</span><br><span class="line">    "status": "idle" ------字符串：状态：playing(已完成) idle(空闲) error(错误)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="更新分机号响应"><a href="#更新分机号响应" class="headerlink" title="更新分机号响应"></a>更新分机号响应</h4><p>异步响应：</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    "id": "892348jk234236",  -------字符串：任务id，也是和响应使用的id</span><br><span class="line">    "action": "set-exten",  -------字符串：动作名称：停止播放</span><br><span class="line">    "status": "completed" ------字符串：状态：completed(已完成) error(错误)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="update"><a href="#update" class="headerlink" title="update"></a>update</h3><h5 id="更新分机号"><a href="#更新分机号" class="headerlink" title="更新分机号"></a>更新分机号</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "id": "892348jk234236",  -------字符串：任务id，也是和响应使用的id</span><br><span class="line">  "action": "set-exten",  -------字符串：动作名称：设置分机号</span><br><span class="line">  "data": &#123;</span><br><span class="line">    "host": "192.168.1.100",  -------字符串： sip服务器ip地址</span><br><span class="line">    "exten": "800",  -------字符串：分机号码</span><br><span class="line">    "password": "Ab123456"  ------字符串：分机密码</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="event"><a href="#event" class="headerlink" title="event"></a>event</h3><h4 id="初始化报告x30的各状态"><a href="#初始化报告x30的各状态" class="headerlink" title="初始化报告x30的各状态"></a>初始化报告x30的各状态</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "action": "init",  ------字符串  数据类型：响应</span><br><span class="line">  "data": &#123;</span><br><span class="line">    "solf-volume": 75,  -------整型：系统软件音量</span><br><span class="line">    "hard-volume": 100,  -------整型：系统硬件音量</span><br><span class="line">    "exten": "800", ------字符串：系统当前分机号</span><br><span class="line">    "status": "idle",  --------字符串：系统当前的播放状态 playing(正在播放) idle(停止) error(错误)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;X30接口概述&quot;&gt;&lt;a href=&quot;#X30接口概述&quot; class=&quot;headerlink&quot; title=&quot;X30接口概述&quot;&gt;&lt;/a&gt;X30接口概述&lt;/h2&gt;&lt;p&gt;订阅主题：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;operation   ------ 基本操作（包含操作：
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E5%B7%A5%E4%BD%9C-Esp32/"/>
    <id>https://tqcenglish.github.io/2020/03/16/工作-Esp32/</id>
    <published>2020-03-16T13:20:21.100Z</published>
    <updated>2020-03-16T13:20:21.101Z</updated>
    
    <content type="html"><![CDATA[<p>esp32<br>esp32 是一款非常流行的物联网开发基础芯片，支持 wifi, 蓝牙, gpio 等。 更多介绍查看 <a href="https://www.espressif.com/zh-hans/products/hardware/esp32/overview" target="_blank" rel="noopener">ESP32</a>。 由于我也是才入门，所以记录一些学习资料与大家共享.</p><ul><li><a href="https://www.espressif.com/zh-hans/support/iot-college/courses?field_type_tid=13&amp;field_course_language_tid=All" target="_blank" rel="noopener">课程</a> 在这里能有很多相关的课程/书籍/代码.</li><li><a href="https://randomnerdtutorials.com/installing-the-esp32-board-in-arduino-ide-mac-and-linux-instructions/" target="_blank" rel="noopener">esp32 Arduino 开发配置（OSX）</a></li><li><a href="https://randomnerdtutorials.com/esp32-web-server-arduino-ide/" target="_blank" rel="noopener">实现一个 web server 控制灯的开/关</a></li><li><a href="https://www.arduino.cc/en/Main/software" target="_blank" rel="noopener">arduino 下载</a> arduino 可以作为 esp32 的开发 ide， 也可以使用 eclipse.</li><li><a href="https://github.com/espressif/esp-idf/blob/master/README_CN.md" target="_blank" rel="noopener">Esp IDF</a> esp 开发环境</li><li><a href="https://docs.espressif.com/projects/esp-idf/zh_CN/latest/get-started/index.html#" target="_blank" rel="noopener">Esp IDF 入门指南</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;esp32&lt;br&gt;esp32 是一款非常流行的物联网开发基础芯片，支持 wifi, 蓝牙, gpio 等。 更多介绍查看 &lt;a href=&quot;https://www.espressif.com/zh-hans/products/hardware/esp32/overview&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E6%80%9D%E8%80%83-%E5%8D%95%E5%8F%8D/"/>
    <id>https://tqcenglish.github.io/2020/03/16/思考-单反/</id>
    <published>2020-03-16T13:20:21.100Z</published>
    <updated>2020-03-16T13:20:21.100Z</updated>
    
    <content type="html"><![CDATA[<p>单反<br>  作为一个没有什么啥子爱好的少年（中年），一次冲动消费买了一个单反。 吃灰两年，由于没有时间缺少拍的事物所以就放弃了。 但是学习是终身的，记录一些单反学习资料.</p><ul><li>视频课程 <a href="https://www.bilibili.com/video/av1114448" target="_blank" rel="noopener">摄影吴师自通</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;单反&lt;br&gt;  作为一个没有什么啥子爱好的少年（中年），一次冲动消费买了一个单反。 吃灰两年，由于没有时间缺少拍的事物所以就放弃了。 但是学习是终身的，记录一些单反学习资料.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;视频课程 &lt;a href=&quot;https://www.bilibili.c
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E7%BF%BB%E8%AF%91-Asterisk-Definitive-AMI/"/>
    <id>https://tqcenglish.github.io/2020/03/16/翻译-Asterisk-Definitive-AMI/</id>
    <published>2020-03-16T13:20:21.097Z</published>
    <updated>2020-03-16T13:20:21.098Z</updated>
    
    <content type="html"><![CDATA[<p>#Asterisk Manager Interface(AMI)</p><p>The Asterisk Manager Interface (AMI) is a system monitoring and management inter‐face provided by Asterisk. It allows live monitoring of events that occur in the system,as well as enabling requests for Asterisk to perform some action. The available actions are wide-ranging and include things such as returning status information and origi‐nating new calls. Many interesting applications have been developed on top of Asteriskthat use the AMI as their primary interface to Asterisk.</p><p>Asterisk提供AMI作为系统监控和管理接口. 它能实时监控系统中产生的事件消息, 而且能够向Astreisk发起一些操作请求. 可以实现很多的操作, 例如返回状态消息或发起新的呼叫. 基于Asterisk的AMI作为主要的接口实现出很多有用的程序.</p><p>This chapter also includes documentation on the use of call files. Asterisk’s call files are an easy way to originate a few calls. Once call origination volume increases or your needs become otherwise more complex, you can move on to using the AMI. Details can be found in “Call Files” on page 569.</p><p>这章还包括了对呼叫文档的使用方法. 通过Asterisk的呼叫配置文件可以很容易的发起电话呼叫.AMI可以实现音量增加等复杂操作.在569页可以看见更详细的关于Call Files的内容.</p><p>##Quick Start 快速开始</p><p>This section is for getting your hands dirty with the AMI as quickly as possible. First,put the following configuration in /etc/asterisk/manager.conf:</p><p>本小节让你尽可能快的使用AMI, 首先，将下面的配置文件放到/etc/asterisk/manager.conf文件中:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">; Turn on the AMI and ask it to only accept connections from localhost.</span><br><span class="line">;</span><br><span class="line">[general]</span><br><span class="line">enabled = yes</span><br><span class="line">webenabled = yes</span><br><span class="line">bindaddr = 127.0.0.1</span><br><span class="line"></span><br><span class="line">;</span><br><span class="line">; Create an account called &quot;hello&quot;, with a password of &quot;world&quot;</span><br><span class="line">;</span><br><span class="line">[hello]</span><br><span class="line">secret=world</span><br><span class="line">read=all  ; Receive all types of events</span><br><span class="line">write=all ; Allow this user to execute all actions</span><br></pre></td></tr></table></figure><p>Once the AMI configuration is ready, enable the built-in HTTP server by putting the following contents in /etc/asterisk/http.conf:</p><p>当完成AMI的配置后，将下面的内容添加到/etc/asterisk/http.conf从而开启内置的HTTP服务器.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">;</span><br><span class="line">; Enable the built-in HTTP server, and only listen for connections on localhost.</span><br><span class="line">;</span><br><span class="line">[general]</span><br><span class="line">enabled = yes</span><br><span class="line">bindaddr = 127.0.0.1</span><br></pre></td></tr></table></figure><p>###AMI over TCP 基于TCP实现的AMI</p><p>There are multiple ways to connect to the AMI, but a TCP socket is the most common.We will use telnet to demonstrate AMI connectivity. This example shows these steps:</p><p>可以通过多种方式连接到AMI, 但是常见方式是使用TCP套接字实现. 我们将使用Telnet的方式去展示AMI连接.通过下面的步骤实现一个例子.</p><ol><li>Connect to the AMI over a TCP socket on port 5038. //通过基于TCP套接字的5038的端口连接到AMI</li><li>Log in using the Login action. //使用Login实现登录</li><li>Execute the Ping action. //执行Ping</li><li>Log off using the Logoff action. //使用Logoff实现注销</li></ol><p>Here’s how the AMI responds to those actions:</p><p>下面是AMI对于这些操作的响应:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ telnet localhost 5038</span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to localhost.</span><br><span class="line">Escape character is &apos;^]&apos;.</span><br><span class="line">Asterisk Call Manager/1.1</span><br><span class="line">Action: Login</span><br><span class="line">Username: hello</span><br><span class="line">Secret: world</span><br><span class="line">Response: Success</span><br><span class="line">Message: Authentication accepted</span><br><span class="line"></span><br><span class="line">Action: Ping</span><br><span class="line">Response: Success</span><br><span class="line">Ping: Pong</span><br><span class="line">Timestamp: 1282739190.454046</span><br><span class="line"></span><br><span class="line">Action: Logoff</span><br><span class="line">Response: Goodbye</span><br><span class="line">Message: Thanks for all the fish.</span><br><span class="line">Connection closed by foreign host.</span><br></pre></td></tr></table></figure><p>Once you have this working, you have verified that AMI is accepting connections via a TCP connection.</p><p>当实现上面的步骤, 你就可以确认AMI通过TCP连接建立连接.</p><p>###AMI over HTTP 基于HTTP实现AMI</p><p>It is also possible to use the AMI over HTTP. In this section we will perform the same<br>actions as before, but over HTTP instead of the native TCP interface to the AMI. AMI<br>over HTTP is covered in more detail in “AMI over HTTP” on page 564.</p><p>另外, 可以使用基于HTTP和AMI通信.在本节我们会执行前面相同的操作, 但是通过的方式是HTTP而不是AMI的本地的TCP接口.在564页的”AMI over HTTP”包含了更详细的关于基于HTTP实现的AMI。</p><p>This example demonstrates how to access the AMI over HTTP, log in, execute the Ping action, and log off:</p><p>这个例子会展示如何通过HTTP去访问AMI,并实现登录，执行Ping,注销操作.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ wget &quot;http://localhost:8088/rawman?action=login&amp;username=hello&amp;secret=world&quot; \</span><br><span class="line">&gt; --save-cookies cookies.txt -O -</span><br><span class="line">--2010-08-31 12:34:23--</span><br><span class="line">Resolving localhost... 127.0.0.1</span><br><span class="line">Connecting to localhost|127.0.0.1|:8088... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 55 [text/plain]</span><br><span class="line">Saving to: `STDOUT&apos;</span><br><span class="line">Response: Success</span><br><span class="line">Message: Authentication accepted</span><br><span class="line">2010-08-31 12:34:23 (662 KB/s) - written to stdout [55/55]</span><br><span class="line"></span><br><span class="line">//实验不成功</span><br><span class="line">$ wget &quot;http://localhost:8088/rawman?action=ping&quot; --load-cookies cookies.txt -O -</span><br><span class="line">--2010-08-31 12:34:23--</span><br><span class="line">Resolving localhost... 127.0.0.1</span><br><span class="line"></span><br><span class="line">Connecting to localhost|127.0.0.1|:8088... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 63 [text/plain]</span><br><span class="line">Saving to: `STDOUT&apos;</span><br><span class="line">Response: Success</span><br><span class="line">Ping: Pong</span><br><span class="line">Timestamp: 1283258063.040293</span><br><span class="line">2010-08-31 12:34:23 (775 KB/s) - written to stdout [63/63]</span><br><span class="line"></span><br><span class="line">$ wget &quot;http://localhost:8088/rawman?action=logoff&quot; --load-cookies cookies.txt -O -</span><br><span class="line">--2010-08-31 12:34:23--</span><br><span class="line">Resolving localhost... 127.0.0.1</span><br><span class="line">Connecting to localhost|127.0.0.1|:8088... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 56 [text/plain]</span><br><span class="line">Saving to: `STDOUT&apos;</span><br><span class="line">Response: Goodbye</span><br><span class="line">Message: Thanks for all the fish.</span><br><span class="line">2010-08-31 12:34:23 (696 KB/s) - written to stdout [56/56]</span><br></pre></td></tr></table></figure><p>The HTTP interface to AMI lets you integrate Asterisk call control into a web service.</p><p>AMI的HTTP接口将呼叫控制整合进一个web服务.</p><p>##Configuration 配置</p><p>The section “Quick Start” on page 553 showed a very basic set of configuration files to get you started. However, there are many more options available for the AMI.</p><p>在553的”快速开始”一节展现了一个非常基本的配置文件来帮助开始使用, 然而, AMI包含了更多可用的选项设置.</p><p>###manager.conf</p><p>The main configuration file for the AMI is /etc/asterisk/manager.conf. The [general] section contains options (listed in Table 20-1) that control the overall operation of the AMI. Any other sections in the manager.conf file will define accounts for logging in and using the AMI.</p><p>AMI的主要配置文件是/etc/asterisk/manager.conf. [general]段包含的选项对AMI的整体运行都起作用. </p><p>###http.conf</p><p>As we’ve seen, the Asterisk Manager Interface can be accessed over HTTP as well as TCP. To make that work, a very simple HTTP server is embedded in Asterisk. All of the options relevant to the AMI go in the [general] section of /etc/asterisk/http.conf.</p><p>正象我们看到的这样, AMI可以象使用TCP一样通过HTTP访问. 开启Asterisk上的一个简单的HTTP Server就可以正常工作. 在/etc/asterisk/http.conf中的[general]段可以设置相关选项.</p><p>##Protocol Overview 协议概述</p><p>###Message Encoding 消息编码</p><p>###Events 事件</p><p>###Actions 动作</p><p>##AMI over HTTP</p><p>###Manager events</p><p>##Call Files</p><p>##Example Usage</p><p>Most of this chapter so far discussed the concepts and configuration related to the AMI.<br>This section will provide some example usage.</p><p>这章讨论了很多关于AMI的概念和配置, 本小结将提供一个使用例子.</p><p>###Originating a Call 发起拨号</p><p>The AMI has the Originate manager action that can be used to originate a call. Many of the accepted headers are the same as the options placed in call files. Table 20-6 lists the headers accepted by the Originate action.</p><p>AMI的Originate操作可以用来发起拨号操作. </p><p>The simplest example of using the Originate action is via telnet:<br>下面是一个通过telent执行Originate操作的简单例子.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ telnet localhost 5038</span><br><span class="line">Trying 127.0.0.1...</span><br><span class="line">Connected to localhost.</span><br><span class="line">Escape character is &apos;^]&apos;.</span><br><span class="line">Asterisk Call Manager/1.3</span><br><span class="line">Action: Login</span><br><span class="line">Username: hello</span><br><span class="line">Secret: world</span><br><span class="line">Response: Success</span><br><span class="line">Message: Authentication accepted</span><br><span class="line">Action: Originate</span><br><span class="line">Channel: Local/loop@test</span><br><span class="line">Application: Playback</span><br><span class="line">Data: demo-congrats</span><br><span class="line">Response: Success</span><br><span class="line">Message: Originate successfully queued</span><br><span class="line">^]</span><br><span class="line">telnet&gt; quit</span><br><span class="line">Connection closed</span><br></pre></td></tr></table></figure><p>###Redirecting a Call 呼叫转移</p><p>Redirecting (or transferring) a call from the AMI is another feature worth mentioning. The Redirect AMI action can be used to send one or two channels to any other exten‐sion in the Asterisk dialplan. If you need to redirect two channels that are bridged together, do them both at the same time. Otherwise, once one channel has been redi‐rected, the other will be hung up.</p><p>AMI另外一个很有价值的特性是重定向, 在Asterisk的拨号方案中，AMI的重定向可以用于发送一个或两个通道到其他扩展. 当需要将两个通道在一起重定向时，必须在相同的时间执行. 否则，当一个通道被重定向时，另一个就会挂断. </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">To redirect a single channel:</span><br><span class="line">Action: Redirect</span><br><span class="line">Channel: SIP/myphone-0011223344</span><br><span class="line">Exten: 1234</span><br><span class="line">Context: default</span><br><span class="line">Priority: 1</span><br><span class="line">To redirect two channels:</span><br><span class="line">Action: Redirect</span><br><span class="line">Channel: SIP/myphone-0011223344</span><br><span class="line">Context: default</span><br><span class="line">Exten: 1234</span><br><span class="line">Priority: 1</span><br><span class="line">ExtraChannel: SIP/otherphone-0011223344</span><br><span class="line">ExtraContext: default</span><br><span class="line">ExtraExten: 5678</span><br><span class="line">ExtraPriority: 1</span><br></pre></td></tr></table></figure><p>One fairly common use of the redirect action from an external application is to redirect both parties of a call into a conference bridge. Place this context in your dialplan:</p><p>一个更常用的使用重定向的时候是外部程序将通话双方重定向到一个会议中.将下面的内容添加到你的拨号方案中.</p><pre><code>[confbridge]exten =&gt; _X.,1,ConfBridge(${EXTEN})</code></pre><p>You could now redirect any two callers into a conference bridge using something like this:</p><p>你可以像下面的方式去重定向任意两个通话的人到会议中.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">Action: Redirect</span><br><span class="line">Channel: SIP/myphone-0011223344</span><br><span class="line">Context: confbridge</span><br><span class="line">Exten: 1234</span><br><span class="line">Priority: 1</span><br><span class="line">ExtraChannel: SIP/otherphone-0011223344</span><br><span class="line">ExtraContext: confbridge</span><br><span class="line">ExtraExten: 1234</span><br><span class="line">ExtraPriority: 1</span><br></pre></td></tr></table></figure><p>Now other callers could join this bridge, or the external application using the AMI could proceed to redirect other channels to this bridge.</p><p>现在其他的通话者就可以加入到这个桥接中， 或者使用扩展程序将其他的通道重定向到这个桥接中.</p><p>###Originating a Call Using Python and StartPy</p><p>To help further demonstrate the use of the Originate action, we have provided a script that uses it. The full script is in Example 20-1.  It can be downloaded from <a href="https://github.com/russellb/amiutils" target="_blank" rel="noopener">https://github.com/russellb/amiutils</a>. To get an idea of the usage of the example application, here is the help output:</p><p>为了帮助更容易的展示如何发起一个操作, 我们提供了一个脚本来实现这个步骤. 完整的脚本在例20-1. 也可以在从<a href="https://github.com/russellb/amiutils" target="_blank" rel="noopener">https://github.com/russellb/amiutils</a>下载. 为了容易使用这个脚本程序， 下面是帮助文档的输出:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ ./amioriginate.py --help //输出省略</span><br></pre></td></tr></table></figure><p>If you run the utility in debug mode, you can see the raw AMI message exchange. First, here is an example of using the script to originate a call and connect it to an application. The MSG OUT and Line In lines in the output identify the AMI exchange. The MSG OUT lines are showing the AMI action in an internal format to the application instead of the raw AMI format, but you can still see the headers and their values. The Line In lines show the raw TCP response from Asterisk. The output shows:</p><p>如果你在调试模式运行这个脚本, 你会看见AMI交互的原始消息. 首先, 这是一个使用脚本发起呼叫并连接它到一个程序的例子. MSG OUT 和 Line In 在输出的每行中标示AMI信息. MSG OUT 用内部格式去替换了原始AMI的格式显示AMI的操作, 但是你仍然可以得到标题和值的信息. Line In 显示了从Asterisk得到的原始TCP响应信息. 输出显示如下:</p><ol><li>The application requests to log into the AMI.  //    程序请求登录到AMI</li><li>Asterisk responds, accepting the authentication request.  //Asterisk的响应消息, 接受认证请求</li><li>The application sends a request to originate a call.  // 程序请求发起电话呼叫</li><li>Asterisk responds indicating that the origination request has been successfully  //Asterisk响应表明请求成功</li></ol><p>processed. The call will occur asynchronously since the originate request included Async: True . Otherwise, we would not get a response until the outbound call either answers or fails for some reason.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">$ ./amioriginate.py -d -u hello -p world \</span><br><span class="line">&gt; -a playback -D demo-congrats SIP/myphone</span><br><span class="line">DEBUG:AMI:MSG OUT: &#123;&apos;action&apos;: &apos;login&apos;, &apos;username&apos;: &apos;hello&apos;, &apos;secret&apos;: &apos;world&apos;,</span><br><span class="line">&apos;actionid&apos;: &apos;rhel6.3-server-28064728-1&apos;&#125;</span><br><span class="line">DEBUG:AMI:Line In: &apos;Asterisk Call Manager/1.3&apos;</span><br><span class="line">DEBUG:AMI:Line In: &apos;Response: Success&apos;</span><br><span class="line">DEBUG:AMI:Line In: &apos;ActionID: rhel6.3-server-28064728-1&apos;</span><br><span class="line">DEBUG:AMI:Line In: &apos;Message: Authentication accepted&apos;</span><br><span class="line">DEBUG:AMI:Line In: &apos;&apos;</span><br><span class="line">DEBUG:AMI:MSG OUT: &#123;&apos;application&apos;: &apos;playback&apos;,</span><br><span class="line">&apos;actionid&apos;: &apos;rhel6.3-server-28064728-2&apos;,</span><br><span class="line">&apos;variable&apos;: &apos;&apos;, &apos;async&apos;: &apos;True&apos;, &apos;data&apos;: &apos;demo-congrats&apos;,</span><br><span class="line">&apos;action&apos;: &apos;originate&apos;, &apos;channel&apos;: &apos;SIP/myphone&apos;&#125;</span><br><span class="line">DEBUG:AMI:Line In: &apos;Response: Success&apos;</span><br><span class="line">DEBUG:AMI:Line In: &apos;ActionID: rhel6.3-server-28064728-2&apos;</span><br><span class="line">DEBUG:AMI:Line In: &apos;Message: Originate successfully queued&apos;</span><br><span class="line">DEBUG:AMI:Line In: &apos;&apos;</span><br></pre></td></tr></table></figure><p><em>Example 20-1 amioriginate.py //省略</em></p><p>##Development Frameworks</p><p>##CSTA</p><p>##Interesting Applications 有用的应用<br>Many useful applications have been developed that take advantage of the AMI. Here is one example.</p><p>###Flash Operator Panel</p><p>##Conclusion 总结<br>The Asterisk Manager Interface provides an API for monitoring events from an Asterisk system, as well as requesting that Asterisk perform a wide range of actions. An HTTP interface has been provided and a number of frameworks have been developed that<br>make it easier to develop applications. All of this information, as well as the examples we looked at at the end of this chapter, should get you thinking about what new appli‐cations you might be able to build using the Asterisk Manager Interface</p><p>AMI提供了监控Asterisk事件的API， 从而请求Asterisk执行很多的功能操作.通过提供的框架和HTTP接口可以很容易的开发应用. 通过本章的信息和前面的例子，思考基于AMI建立新的应用. </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#Asterisk Manager Interface(AMI)&lt;/p&gt;
&lt;p&gt;The Asterisk Manager Interface (AMI) is a system monitoring and management inter‐face provided by
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E7%BF%BB%E8%AF%91-%E6%95%B0%E6%8D%AE%E5%BA%93%E9%9B%86%E6%88%90/"/>
    <id>https://tqcenglish.github.io/2020/03/16/翻译-数据库集成/</id>
    <published>2020-03-16T13:20:21.097Z</published>
    <updated>2020-03-16T13:20:21.097Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Asterisk-与数据库集成"><a href="#Asterisk-与数据库集成" class="headerlink" title="Asterisk 与数据库集成"></a>Asterisk 与数据库集成</h1><p>原文包含了两种系统( Ubuntu 与 RHEL )，两种数据库( MySQL 与 PostgreSQL )的使用介绍, 本文测试使用 Ubuntu 与 MySQL</p><h2 id="ubuntu-下安装-mysql"><a href="#ubuntu-下安装-mysql" class="headerlink" title="ubuntu 下安装 mysql"></a>ubuntu 下安装 mysql</h2><h2 id="ubuntu-安装配置-ODBC"><a href="#ubuntu-安装配置-ODBC" class="headerlink" title="ubuntu 安装配置 ODBC"></a>ubuntu 安装配置 ODBC</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo aptitude install unixodbc unixodbc-dev libmyodbc</span><br></pre></td></tr></table></figure><p> 在 ubuntu 16.4 的版本中不能正常安装 libmyodbc, 参考链接<br> <a href="http://askubuntu.com/questions/800216/installing-ubuntu-16-04-lts-how-to-install-odbc" target="_blank" rel="noopener">http://askubuntu.com/questions/800216/installing-ubuntu-16-04-lts-how-to-install-odbc</a><br> <a href="https://bugs.launchpad.net/ubuntu/+source/asterisk/+bug/1591086" target="_blank" rel="noopener">https://bugs.launchpad.net/ubuntu/+source/asterisk/+bug/1591086</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Asterisk-与数据库集成&quot;&gt;&lt;a href=&quot;#Asterisk-与数据库集成&quot; class=&quot;headerlink&quot; title=&quot;Asterisk 与数据库集成&quot;&gt;&lt;/a&gt;Asterisk 与数据库集成&lt;/h1&gt;&lt;p&gt;原文包含了两种系统( Ubuntu 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E8%BD%AF%E4%BB%B6-Android-%E8%BD%AF%E4%BB%B6%E5%AE%89%E8%A3%85/"/>
    <id>https://tqcenglish.github.io/2020/03/16/软件-Android-软件安装/</id>
    <published>2020-03-16T13:20:21.095Z</published>
    <updated>2020-03-16T13:20:21.096Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Android-软件安装"><a href="#Android-软件安装" class="headerlink" title="Android 软件安装"></a>Android 软件安装</h1><p>国内手机使用 google 服务， 已经一些相关软件。</p><ul><li>谷歌安装器 安装服务相关框架</li><li>shadowsocks</li><li>youtube</li><li>twitter</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Android-软件安装&quot;&gt;&lt;a href=&quot;#Android-软件安装&quot; class=&quot;headerlink&quot; title=&quot;Android 软件安装&quot;&gt;&lt;/a&gt;Android 软件安装&lt;/h1&gt;&lt;p&gt;国内手机使用 google 服务， 已经一些相关软件。&lt;/p
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E8%BD%AF%E4%BB%B6-Fathom/"/>
    <id>https://tqcenglish.github.io/2020/03/16/软件-Fathom/</id>
    <published>2020-03-16T13:20:21.094Z</published>
    <updated>2020-03-16T13:20:21.095Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Fathom"><a href="#Fathom" class="headerlink" title="Fathom"></a><a href="https://usefathom.com/" target="_blank" rel="noopener">Fathom</a></h1><p>类似谷歌的网址访问统计。对，这又是一个自建软件。相对谷歌分析的优势</p><ul><li>数据更安全</li><li>对于墙内的人用了 google 统计可能会导致访问网页缓慢</li></ul><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://github.com/usefathom/fathom" target="_blank" rel="noopener">Github</a> 见详细步骤。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">(<span class="function"><span class="keyword">function</span>(<span class="params">f, a, t, h, o, m</span>)</span>&#123;</span><br><span class="line">a[h]=a[h]||<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">(a[h].q=a[h].q||[]).push(<span class="built_in">arguments</span>)</span><br><span class="line">&#125;;</span><br><span class="line">o=f.createElement(<span class="string">'script'</span>),</span><br><span class="line">m=f.getElementsByTagName(<span class="string">'script'</span>)[<span class="number">0</span>];</span><br><span class="line">o.async=<span class="number">1</span>; o.src=t; o.id=<span class="string">'fathom-script'</span>;</span><br><span class="line">m.parentNode.insertBefore(o,m)</span><br><span class="line">&#125;)(<span class="built_in">document</span>, <span class="built_in">window</span>, <span class="string">'//my-fathom-site.com/tracker.js'</span>, <span class="string">'fathom'</span>);</span><br><span class="line">fathom(<span class="string">'trackPageview'</span>);</span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>注意添加端口</p><h2 id="问题-amp-解决"><a href="#问题-amp-解决" class="headerlink" title="问题&amp;解决"></a>问题&amp;解决</h2><ul><li>若浏览器开启 <strong>Do Not Track</strong>, 会导致不能收集数据。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Fathom&quot;&gt;&lt;a href=&quot;#Fathom&quot; class=&quot;headerlink&quot; title=&quot;Fathom&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://usefathom.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fath
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://tqcenglish.github.io/2020/03/16/%E8%BD%AF%E4%BB%B6-%E7%BD%91%E7%BB%9C%E5%97%85%E6%8E%A2/"/>
    <id>https://tqcenglish.github.io/2020/03/16/软件-网络嗅探/</id>
    <published>2020-03-16T13:20:21.093Z</published>
    <updated>2020-03-16T13:20:21.094Z</updated>
    
    <content type="html"><![CDATA[<p>#网络嗅探</p><p>##Wireshark</p><p>##网卡四种工作模式</p><p>##<a href="http://www.tcpdump.org/" target="_blank" rel="noopener">libpcap</a><br>数据包捕获函数库,<a href="https://github.com/the-tcpdump-group/libpcap" target="_blank" rel="noopener">https://github.com/the-tcpdump-group/libpcap</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#网络嗅探&lt;/p&gt;
&lt;p&gt;##Wireshark&lt;/p&gt;
&lt;p&gt;##网卡四种工作模式&lt;/p&gt;
&lt;p&gt;##&lt;a href=&quot;http://www.tcpdump.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;libpcap&lt;/a&gt;&lt;br&gt;数据包捕获
      
    
    </summary>
    
    
  </entry>
  
</feed>
